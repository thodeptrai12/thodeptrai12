/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Forms;

import Model.DayLookup;
import Model.Dictionary;
import Model.Model_Button;
import Swing.ScrollBar;
import java.awt.Color;
import java.text.Collator;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.HashMap;
import java.util.List;
import java.util.Locale;
import java.util.Map;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ASUS
 */
public class LookupFrequencyStatisticsForm extends javax.swing.JPanel {

    private HashMap<String, Integer> listWordHashMap;

    /**
     * Creates new form SearchFrequencyStatisticsForm
     */
    public LookupFrequencyStatisticsForm() {
        initComponents();
        init();
    }

    public void init() {
        StatisticBtn1.setData(new Model_Button(new ImageIcon(getClass().getResource("/com/raven/icon/5.png")), "Thống kê"));
        viewFullBtn.setData(new Model_Button(new ImageIcon(getClass().getResource("/com/raven/icon/2.png")), "Xem tất cả"));
        listWordHashMap = new HashMap<>();

        //  add row table
        jScrollTable.setVerticalScrollBar(new ScrollBar());
        jScrollTable.getVerticalScrollBar().setBackground(Color.WHITE);
        jScrollTable.getViewport().setBackground(Color.WHITE);
        JPanel p = new JPanel();
        p.setBackground(Color.WHITE);
        jScrollTable.setCorner(JScrollPane.UPPER_RIGHT_CORNER, p);
        addDataTable();
    }

    public void readData() {
        listWordHashMap = new HashMap<>();
        for (DayLookup dayLookup : Dictionary.listSearch) {

            HashMap<String, Integer> hm = dayLookup.getWords();

            hm.forEach((word, count) -> {
                if (listWordHashMap.containsKey(word)) {
                    int value = (int) listWordHashMap.get(word) + count;
                    listWordHashMap.put(word, value);
                } else {
                    listWordHashMap.put(word, (int) count);
                }
            });

        }
    }

    public void addDataTable() {
        //table.setModel(new DefaultTableModel(null, new String[]{"#", "Word", "Meaning", "Chọn"}));
        DefaultTableModel dtm = (DefaultTableModel) table.getModel();
        dtm.setRowCount(0);
        // duyet danh sach
        //readData();
        int i = 1;
        for (Map.Entry<String, Integer> entry : listWordHashMap.entrySet()) {
            table.addRow(new Object[]{i, entry.getKey(), entry.getValue()});
            i++;
            // Do something with the key and value
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        date1 = new com.raven.datechooser.DateChooser();
        date2 = new com.raven.datechooser.DateChooser();
        panelBorder2 = new Swing.PanelBorder();
        jScrollTable = new javax.swing.JScrollPane();
        table = new Swing.Table();
        titleTable = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        refreshBtn = new javax.swing.JButton();
        nofifiy = new javax.swing.JLabel();
        panelBorder1 = new Swing.PanelBorder();
        dateText1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        dateText2 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        viewFullBtn = new Components.Button();
        nowDateBtn = new javax.swing.JButton();
        StatisticBtn1 = new Components.Button();

        date1.setForeground(new java.awt.Color(70, 168, 220));
        date1.setTextRefernce(dateText1);

        date2.setForeground(new java.awt.Color(70, 168, 220));
        date2.setTextRefernce(dateText2);

        panelBorder2.setBackground(new java.awt.Color(255, 255, 255));

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "#", "Từ", "Số lần"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table.setColumnSelectionAllowed(true);
        table.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        jScrollTable.setViewportView(table);
        table.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        if (table.getColumnModel().getColumnCount() > 0) {
            table.getColumnModel().getColumn(0).setMaxWidth(70);
        }

        titleTable.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        titleTable.setForeground(new java.awt.Color(16, 103, 158));
        titleTable.setText("Thống kê tần suất tra cứu:");

        jComboBox1.setBackground(new java.awt.Color(153, 204, 255));
        jComboBox1.setForeground(new java.awt.Color(153, 153, 153));
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Sắp xếp ", "Sắp xếp A - Z", "Sắp xếp Z - A", "Số lần tăng dần", "Số lần giảm dần" }));
        jComboBox1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jComboBox1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        refreshBtn.setBackground(new java.awt.Color(248, 255, 255));
        refreshBtn.setText("Làm mới");
        refreshBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        refreshBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                refreshBtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                refreshBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                refreshBtnMouseExited(evt);
            }
        });

        nofifiy.setFont(new java.awt.Font("Segoe UI", 2, 16)); // NOI18N
        nofifiy.setForeground(new java.awt.Color(255, 51, 51));

        javax.swing.GroupLayout panelBorder2Layout = new javax.swing.GroupLayout(panelBorder2);
        panelBorder2.setLayout(panelBorder2Layout);
        panelBorder2Layout.setHorizontalGroup(
            panelBorder2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBorder2Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(panelBorder2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(panelBorder2Layout.createSequentialGroup()
                        .addComponent(titleTable)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(nofifiy)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(refreshBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollTable, javax.swing.GroupLayout.PREFERRED_SIZE, 798, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        panelBorder2Layout.setVerticalGroup(
            panelBorder2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelBorder2Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(panelBorder2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelBorder2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(titleTable)
                        .addComponent(nofifiy))
                    .addGroup(panelBorder2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(refreshBtn)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollTable, javax.swing.GroupLayout.PREFERRED_SIZE, 405, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        panelBorder1.setBackground(new java.awt.Color(255, 255, 255));

        dateText1.setFont(new java.awt.Font("SansSerif", 0, 13)); // NOI18N
        dateText1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        dateText1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(16, 103, 158), 1, true));
        dateText1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        dateText1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dateText1ActionPerformed(evt);
            }
        });

        jLabel2.setBackground(new java.awt.Color(0, 204, 255));
        jLabel2.setFont(new java.awt.Font("SansSerif", 1, 13)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(16, 103, 158));
        jLabel2.setText("Date 1");

        dateText2.setFont(new java.awt.Font("SansSerif", 0, 13)); // NOI18N
        dateText2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        dateText2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(16, 103, 158), 1, true));
        dateText2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        dateText2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dateText2ActionPerformed(evt);
            }
        });

        jLabel3.setBackground(new java.awt.Color(0, 204, 255));
        jLabel3.setFont(new java.awt.Font("SansSerif", 1, 13)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(16, 103, 158));
        jLabel3.setText("Date 2");

        viewFullBtn.setColor1(new java.awt.Color(28, 181, 224));
        viewFullBtn.setColor2(new java.awt.Color(0, 0, 120));
        viewFullBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                viewFullBtnMouseClicked(evt);
            }
        });

        nowDateBtn.setBackground(new java.awt.Color(236, 238, 238));
        nowDateBtn.setText("Now");
        nowDateBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        nowDateBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                nowDateBtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                nowDateBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                nowDateBtnMouseExited(evt);
            }
        });
        nowDateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nowDateBtnActionPerformed(evt);
            }
        });

        StatisticBtn1.setColor1(new java.awt.Color(28, 181, 224));
        StatisticBtn1.setColor2(new java.awt.Color(0, 0, 120));
        StatisticBtn1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                StatisticBtn1MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout panelBorder1Layout = new javax.swing.GroupLayout(panelBorder1);
        panelBorder1.setLayout(panelBorder1Layout);
        panelBorder1Layout.setHorizontalGroup(
            panelBorder1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBorder1Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(panelBorder1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(dateText1, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(70, 70, 70)
                .addComponent(nowDateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelBorder1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(dateText2, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                .addComponent(viewFullBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(StatisticBtn1, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
        );
        panelBorder1Layout.setVerticalGroup(
            panelBorder1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBorder1Layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addGroup(panelBorder1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelBorder1Layout.createSequentialGroup()
                        .addGap(0, 1, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dateText1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12))
                    .addGroup(panelBorder1Layout.createSequentialGroup()
                        .addGroup(panelBorder1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(viewFullBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(panelBorder1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(panelBorder1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(nowDateBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(dateText2, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)))
                            .addComponent(StatisticBtn1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(12, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(panelBorder1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(15, 15, 15)
                    .addComponent(panelBorder2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(22, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(panelBorder1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(108, 108, 108)
                    .addComponent(panelBorder2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
        // get selected value
        int x = jComboBox1.getSelectedIndex();
        // Chuyển HashMap thành List
        List<Map.Entry<String, Integer>> list = new ArrayList<>(listWordHashMap.entrySet());
        // Sử dụng Collator để sắp xếp theo tiếng Việt
        Collator collator = Collator.getInstance(new Locale("vi", "VN"));
        collator.setStrength(Collator.SECONDARY); // Không phân biệt chữ hoa, chữ thường,

        DefaultTableModel dtm = (DefaultTableModel) table.getModel();
        dtm.setRowCount(0);
        int i = 1;

        switch (x) {
            case 0:

                addDataTable();
                break;
            case 1:
                // Sắp xếp List theo thứ tự từ A-Z của key
                Collections.sort(list, new Comparator<Map.Entry<String, Integer>>() {
                    public int compare(Map.Entry<String, Integer> o1, Map.Entry<String, Integer> o2) {
                        return collator.compare(o1.getKey(), o2.getKey());
                    }
                });

                for (Map.Entry<String, Integer> entry : list) {
                    table.addRow(new Object[]{i, entry.getKey(), entry.getValue()});
                    i++;
                    // Do something with the key and value
                }

                break;

            case 2:

                // Sắp xếp List theo thứ tự từ A-Z của key
                Collections.sort(list, new Comparator<Map.Entry<String, Integer>>() {
                    public int compare(Map.Entry<String, Integer> o1, Map.Entry<String, Integer> o2) {
                        return collator.compare(o2.getKey(), o1.getKey());
                    }
                });
                for (Map.Entry<String, Integer> entry : list) {
                    table.addRow(new Object[]{i, entry.getKey(), entry.getValue()});
                    i++;
                    // Do something with the key and value
                }

                break;

            case 3:

                // Sắp xếp List theo số lần tăng tra cứu 
                Collections.sort(list, new Comparator<Map.Entry<String, Integer>>() {
                    public int compare(Map.Entry<String, Integer> o1, Map.Entry<String, Integer> o2) {
                        return o1.getValue() - o2.getValue();
                    }
                });
                for (Map.Entry<String, Integer> entry : list) {
                    table.addRow(new Object[]{i, entry.getKey(), entry.getValue()});
                    i++;
                    // Do something with the key and value
                }
                break;
            case 4:

                // Sắp xếp List theo số lần giảm tra cứu 
                Collections.sort(list, new Comparator<Map.Entry<String, Integer>>() {
                    public int compare(Map.Entry<String, Integer> o1, Map.Entry<String, Integer> o2) {
                        return o2.getValue() - o1.getValue();
                    }
                });
                for (Map.Entry<String, Integer> entry : list) {
                    table.addRow(new Object[]{i, entry.getKey(), entry.getValue()});
                    i++;
                    // Do something with the key and value
                }
                break;
            default:
                break;
        }
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void refreshBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_refreshBtnMouseClicked
        // TODO add your handling code here:
        readData();
        addDataTable();
    }//GEN-LAST:event_refreshBtnMouseClicked

    private void dateText1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dateText1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dateText1ActionPerformed

    private void dateText2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dateText2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dateText2ActionPerformed

    private void nowDateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nowDateBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nowDateBtnActionPerformed

    private void nowDateBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nowDateBtnMouseEntered
        // TODO add your handling code here:
        nowDateBtn.setBackground(new Color(191, 247, 249));

    }//GEN-LAST:event_nowDateBtnMouseEntered

    private void nowDateBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nowDateBtnMouseExited
        // TODO add your handling code here:
        nowDateBtn.setBackground(new Color(236, 238, 238));

    }//GEN-LAST:event_nowDateBtnMouseExited

    private void refreshBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_refreshBtnMouseEntered
        // TODO add your handling code here:
        refreshBtn.setBackground(new Color(191, 247, 249));
    }//GEN-LAST:event_refreshBtnMouseEntered

    private void refreshBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_refreshBtnMouseExited
        // TODO add your handling code here:
        refreshBtn.setBackground(new Color(236, 238, 238));

    }//GEN-LAST:event_refreshBtnMouseExited

    private void StatisticBtn1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_StatisticBtn1MouseClicked
        // TODO add your handling code here:
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd-MM-yyyy");
        LocalDate date1LocalDate = LocalDate.parse(dateText1.getText(), formatter);
        LocalDate date2LocalDate = LocalDate.parse(dateText2.getText(), formatter);

        // check nhung ngay trong lua chon
        if (date1LocalDate.isAfter(date2LocalDate)) {
            JOptionPane.showMessageDialog(this, "Xin vui lòng chọn Date1 < Date2 !!");
        } else {

            listWordHashMap = new HashMap<>();
            for (DayLookup dayLookup : Dictionary.listSearch) {
                LocalDate selectDate = dayLookup.getDate();

                // nhung ngay == date1 = date 2 hoac date1< date< date2
                if (selectDate.equals(date1LocalDate)
                        || selectDate.equals(date2LocalDate)
                        || (selectDate.isAfter(date1LocalDate)
                        && selectDate.isBefore(date2LocalDate))) {
                    HashMap<String, Integer> hm = dayLookup.getWords();

                    hm.forEach((word, count) -> {
                        if (listWordHashMap.containsKey(word)) {
                            int value = (int) listWordHashMap.get(word) + count;
                            listWordHashMap.put(word, value);
                        } else {
                            listWordHashMap.put(word, (int) count);
                        }
                    });
                }

            }

            addDataTable();
            nofifiy.setText(dateText1.getText() + " đến " + dateText2.getText());
        }

    }//GEN-LAST:event_StatisticBtn1MouseClicked

    private void nowDateBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nowDateBtnMouseClicked
        // TODO add your handling code here:
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd-MM-yyyy");
        dateText2.setText(LocalDate.now().format(formatter));

    }//GEN-LAST:event_nowDateBtnMouseClicked

    private void viewFullBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_viewFullBtnMouseClicked
        // TODO add your handling code here:
        readData();
        addDataTable();
        nofifiy.setText("Tất cả");

    }//GEN-LAST:event_viewFullBtnMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private Components.Button StatisticBtn1;
    private com.raven.datechooser.DateChooser date1;
    private com.raven.datechooser.DateChooser date2;
    private javax.swing.JTextField dateText1;
    private javax.swing.JTextField dateText2;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollTable;
    private javax.swing.JLabel nofifiy;
    private javax.swing.JButton nowDateBtn;
    private Swing.PanelBorder panelBorder1;
    private Swing.PanelBorder panelBorder2;
    private javax.swing.JButton refreshBtn;
    private Swing.Table table;
    private javax.swing.JLabel titleTable;
    private Components.Button viewFullBtn;
    // End of variables declaration//GEN-END:variables
}
